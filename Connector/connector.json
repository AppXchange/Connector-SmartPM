{
  "name": "SmartPM",
  "urlPart": "smart-pm",
  "key": "smart-pm",
  "description": "",
  "connectionDefinitions": [
    {
      "key": "apiKeyAuth",
      "name": "ApiKeyAuth",
      "description": "SmartPM API Authentication",
      "attributes": [
        {
          "title": "ApiKey",
          "key": "apiKey",
          "isSensitive": true,
          "isRequired": true,
          "description": "SmartPM API Key generated from the Admin \u003E Integrations section"
        },
        {
          "title": "Connection Environment",
          "key": "connectionEnvironment",
          "isSensitive": false,
          "isRequired": true,
          "description": "Select the environment to connect to",
          "options": [
            {
              "label": "Production",
              "value": 1
            },
            {
              "label": "Test",
              "value": 2
            }
          ]
        }
      ],
      "type": "Standard"
    }
  ],
  "configSchema": {
    "type": "object",
    "properties": {
      "companyId": {
        "type": "string"
      }
    }
  },
  "modules": [
    {
      "name": "Projects",
      "urlPart": "projects",
      "key": "projects",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/projects/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "properties": {
              "CreateProjectConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "DeleteProjectConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "UpdateMetadataProjectConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "CreateProjectCommentsConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Projects V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/projects/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ProjectsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectCommentsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectCalendarsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectCalendarConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectWorkBreakdownStructureConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectActivityCodeTypesConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "SpecificProjectActivityCodeTypeConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectWorkBreakdownStructureElementConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Projects V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Projects",
          "urlPart": "projects",
          "key": "projects",
          "description": "SmartPM Project data object representing a construction project.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the project"
              },
              "name": {
                "type": "string",
                "description": "Name of the project"
              },
              "startDate": {
                "type": "string",
                "description": "Start date of the project"
              },
              "country": {
                "type": "string",
                "description": "Country where the project is located"
              },
              "city": {
                "type": "string",
                "description": "City where the project is located"
              },
              "state": {
                "type": "string",
                "description": "State/province where the project is located"
              },
              "zipcode": {
                "type": "string",
                "description": "Postal/ZIP code of the project location"
              },
              "latitude": {
                "type": "number",
                "description": "Latitude coordinate of the project location"
              },
              "longitude": {
                "type": "number",
                "description": "Longitude coordinate of the project location"
              },
              "originalScenarioId": {
                "type": "integer",
                "description": "ID of the original scenario for this project"
              },
              "defaultScenarioId": {
                "type": "integer",
                "description": "ID of the default scenario for this project"
              },
              "underConstruction": {
                "type": "boolean",
                "description": "Indicates if the project is currently under construction"
              },
              "projectPlanId": {
                "type": "string",
                "description": "Identifier for the project plan"
              },
              "projectPlanSlotCount": {
                "type": "integer",
                "description": "Number of slots in the project plan"
              },
              "weatherStationId": {
                "type": "string",
                "description": "ID of the associated weather station, if any"
              },
              "metadata": {
                "type": "object",
                "additionalProperties": true,
                "description": "Additional metadata associated with the project"
              },
              "companyId": {
                "type": "string",
                "description": "ID of the company that owns the project"
              },
              "source": {
                "type": "string",
                "description": "Source system of the project data"
              },
              "dataDate": {
                "type": "string",
                "description": "Date when the project data was last updated"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "description": "SmartPM Project data object representing a construction project."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Project",
          "urlPart": "project",
          "key": "project",
          "description": "SmartPM Project data object representing a specific construction project.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the project"
              },
              "name": {
                "type": "string",
                "description": "Name of the project"
              },
              "startDate": {
                "type": "string",
                "description": "Start date of the project"
              },
              "country": {
                "type": "string",
                "description": "Country where the project is located"
              },
              "city": {
                "type": "string",
                "description": "City where the project is located"
              },
              "state": {
                "type": "string",
                "description": "State/province where the project is located"
              },
              "zipcode": {
                "type": "string",
                "description": "Postal/ZIP code of the project location"
              },
              "latitude": {
                "type": "number",
                "description": "Latitude coordinate of the project location"
              },
              "longitude": {
                "type": "number",
                "description": "Longitude coordinate of the project location"
              },
              "originalScenarioId": {
                "type": "integer",
                "description": "ID of the original scenario for this project"
              },
              "defaultScenarioId": {
                "type": "integer",
                "description": "ID of the default scenario for this project"
              },
              "underConstruction": {
                "type": "boolean",
                "description": "Indicates if the project is currently under construction"
              },
              "projectPlanId": {
                "type": "string",
                "description": "Identifier for the project plan"
              },
              "projectPlanSlotCount": {
                "type": "integer",
                "description": "Number of slots in the project plan"
              },
              "weatherStationId": {
                "type": "string",
                "description": "ID of the associated weather station, if any"
              },
              "metadata": {
                "type": "object",
                "additionalProperties": true,
                "description": "Additional metadata associated with the project"
              },
              "companyId": {
                "type": "string",
                "description": "ID of the company that owns the project"
              },
              "source": {
                "type": "string",
                "description": "Source system of the project data"
              },
              "dataDate": {
                "type": "string",
                "description": "Date when the project data was last updated"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "description": "SmartPM Project data object representing a specific construction project."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Create",
              "urlPart": "create",
              "key": "create",
              "description": "Create a new project in SmartPM",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the project"
                  },
                  "city": {
                    "type": "string",
                    "description": "City where the project is located"
                  },
                  "state": {
                    "type": "string",
                    "description": "State/province where the project is located"
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "Postal/ZIP code of the project location"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country where the project is located"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "Latitude coordinate of the project location"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "Longitude coordinate of the project location"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fileId": {
                          "type": "string",
                          "description": "Unique identifier of the file"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the file"
                        },
                        "dataDate": {
                          "type": "string",
                          "description": "Data date of the file"
                        },
                        "contractualEndDate": {
                          "type": "string",
                          "description": "Contractual end date of the file"
                        }
                      },
                      "required": [
                        "fileId",
                        "name"
                      ],
                      "description": "The files that you have uploaded to SmartPM that you want imported to the project"
                    },
                    "description": "The files that you have uploaded to SmartPM that you want imported to the project"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "XER",
                      "MPP",
                      "PMXML",
                      "PPX",
                      "PP"
                    ],
                    "description": "Source file format"
                  },
                  "projectPlan": {
                    "type": "string",
                    "enum": [
                      "Dashboard",
                      "Oversight",
                      "Controls"
                    ],
                    "description": "The plan type for the project"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Additional metadata key-value pairs for the project"
                  }
                },
                "required": [
                  "name",
                  "city",
                  "state",
                  "zipCode",
                  "country",
                  "latitude",
                  "longitude",
                  "files",
                  "source"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "integer",
                    "description": "Unique identifier of the created project"
                  },
                  "message": {
                    "type": "string",
                    "description": "Response message from the API"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fileId": {
                          "type": "string"
                        },
                        "importId": {
                          "type": "string"
                        },
                        "valid": {
                          "type": "boolean"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Status of the imported files"
                    },
                    "description": "Status of the imported files"
                  }
                }
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            },
            {
              "name": "Delete",
              "urlPart": "delete",
              "key": "delete",
              "description": "Delete an existing project in SmartPM",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "The ID of the project to delete"
                  }
                },
                "required": [
                  "projectId"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Indicates if the project was successfully deleted"
                  },
                  "message": {
                    "type": "string",
                    "description": "Response message from the API"
                  }
                }
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            },
            {
              "name": "Update Metadata",
              "urlPart": "update-metadata",
              "key": "update-metadata",
              "description": "Update metadata fields and values for an existing project in SmartPM",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "The ID of the project to update"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Dictionary of metadata field names and their values"
                  }
                },
                "required": [
                  "projectId",
                  "metadata"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Updated metadata fields and values"
                  }
                }
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "name": "Project Comments",
          "urlPart": "project-comments",
          "key": "project-comments",
          "description": "Project comment data object representing notes and comments on a SmartPM project.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the comment"
              },
              "notes": {
                "type": "string",
                "description": "Content of the comment"
              },
              "user": {
                "type": "string",
                "description": "User who created the comment"
              },
              "createdAt": {
                "type": "string",
                "description": "Timestamp when the comment was created"
              },
              "projectId": {
                "type": "integer",
                "description": "ID of the project this comment belongs to"
              }
            },
            "required": [
              "id",
              "notes",
              "user",
              "createdAt",
              "projectId"
            ],
            "description": "Project comment data object representing notes and comments on a SmartPM project."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Create",
              "urlPart": "create",
              "key": "create",
              "description": "Create a new comment on a project in SmartPM",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "The ID of the project to add the comment to"
                  },
                  "notes": {
                    "type": "string",
                    "description": "The content of the comment"
                  }
                },
                "required": [
                  "projectId",
                  "notes"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "comments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "notes": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "description": "List of project comments including the newly created one"
                    },
                    "description": "List of project comments including the newly created one"
                  }
                }
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "name": "Project Calendars",
          "urlPart": "project-calendars",
          "key": "project-calendars",
          "description": "SmartPM Project Calendar data object representing work schedules and holidays for a construction project.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the calendar"
              },
              "baseCalendarId": {
                "type": "integer",
                "description": "ID of the base calendar, if this is derived from another calendar"
              },
              "name": {
                "type": "string",
                "description": "Name of the calendar"
              },
              "hoursPerDay": {
                "type": "integer",
                "description": "Standard working hours per day"
              },
              "hoursPerMonth": {
                "type": "integer",
                "description": "Standard working hours per month"
              },
              "hoursPerWeek": {
                "type": "integer",
                "description": "Standard working hours per week"
              },
              "hoursPerYear": {
                "type": "integer",
                "description": "Standard working hours per year"
              },
              "worktimeList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the work time entry"
                    },
                    "holiday": {
                      "type": "boolean",
                      "description": "Indicates if this entry represents a holiday"
                    },
                    "dayOfWeek": {
                      "type": "integer",
                      "description": "Day of the week (0-6, where 0 is Sunday)"
                    },
                    "specificDate": {
                      "type": "string",
                      "description": "Specific date for this entry, if applicable"
                    },
                    "hours": {
                      "type": "integer",
                      "description": "Total working hours for this entry"
                    },
                    "timeStart1": {
                      "type": "string",
                      "description": "First work period start time"
                    },
                    "timeStart2": {
                      "type": "string",
                      "description": "Second work period start time"
                    },
                    "timeStart3": {
                      "type": "string",
                      "description": "Third work period start time"
                    },
                    "timeStart4": {
                      "type": "string",
                      "description": "Fourth work period start time"
                    },
                    "timeEnd1": {
                      "type": "string",
                      "description": "First work period end time"
                    },
                    "timeEnd2": {
                      "type": "string",
                      "description": "Second work period end time"
                    },
                    "timeEnd3": {
                      "type": "string",
                      "description": "Third work period end time"
                    },
                    "timeEnd4": {
                      "type": "string",
                      "description": "Fourth work period end time"
                    }
                  },
                  "description": "List of work time entries defining the calendar schedule"
                },
                "description": "List of work time entries defining the calendar schedule"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "description": "SmartPM Project Calendar data object representing work schedules and holidays for a construction project."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Project Calendar",
          "urlPart": "project-calendar",
          "key": "project-calendar",
          "description": "SmartPM Project Calendar data object representing a specific calendar configuration for a construction project.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the calendar"
              },
              "baseCalendarId": {
                "type": "integer",
                "description": "ID of the base calendar, if this is derived from another calendar"
              },
              "name": {
                "type": "string",
                "description": "Name of the calendar"
              },
              "hoursPerDay": {
                "type": "integer",
                "description": "Standard working hours per day"
              },
              "hoursPerMonth": {
                "type": "integer",
                "description": "Standard working hours per month"
              },
              "hoursPerWeek": {
                "type": "integer",
                "description": "Standard working hours per week"
              },
              "hoursPerYear": {
                "type": "integer",
                "description": "Standard working hours per year"
              },
              "worktimeList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the work time entry"
                    },
                    "holiday": {
                      "type": "boolean",
                      "description": "Indicates if this entry represents a holiday"
                    },
                    "dayOfWeek": {
                      "type": "integer",
                      "description": "Day of the week (0-6, where 0 is Sunday)"
                    },
                    "specificDate": {
                      "type": "string",
                      "description": "Specific date for this entry, if applicable"
                    },
                    "hours": {
                      "type": "integer",
                      "description": "Total working hours for this entry"
                    },
                    "timeStart1": {
                      "type": "string",
                      "description": "First work period start time"
                    },
                    "timeStart2": {
                      "type": "string",
                      "description": "Second work period start time"
                    },
                    "timeStart3": {
                      "type": "string",
                      "description": "Third work period start time"
                    },
                    "timeStart4": {
                      "type": "string",
                      "description": "Fourth work period start time"
                    },
                    "timeEnd1": {
                      "type": "string",
                      "description": "First work period end time"
                    },
                    "timeEnd2": {
                      "type": "string",
                      "description": "Second work period end time"
                    },
                    "timeEnd3": {
                      "type": "string",
                      "description": "Third work period end time"
                    },
                    "timeEnd4": {
                      "type": "string",
                      "description": "Fourth work period end time"
                    }
                  },
                  "description": "List of work time entries defining the calendar schedule"
                },
                "description": "List of work time entries defining the calendar schedule"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "description": "SmartPM Project Calendar data object representing a specific calendar configuration for a construction project."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Project Work Breakdown Structure",
          "urlPart": "project-work-breakdown-structure",
          "key": "project-work-breakdown-structure",
          "description": "SmartPM Project Work Breakdown Structure data object representing the hierarchical breakdown of project work.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the WBS element"
              },
              "code": {
                "type": "string",
                "description": "WBS code for the element"
              },
              "name": {
                "type": "string",
                "description": "Name of the WBS element"
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the WBS element"
              },
              "level": {
                "type": "integer",
                "description": "Hierarchical level of the WBS element"
              },
              "parentId": {
                "type": "string",
                "description": "ID of the parent WBS element"
              },
              "children": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the child WBS element"
                    },
                    "code": {
                      "type": "string",
                      "description": "WBS code for the child element"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the child WBS element"
                    },
                    "level": {
                      "type": "integer",
                      "description": "Hierarchical level of the child WBS element"
                    }
                  },
                  "required": [
                    "id",
                    "code",
                    "name"
                  ],
                  "description": "List of child WBS elements"
                },
                "description": "List of child WBS elements"
              },
              "metadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Additional metadata associated with the WBS element"
              },
              "projectId": {
                "type": "integer",
                "description": "ID of the project this WBS element belongs to"
              }
            },
            "required": [
              "id",
              "code",
              "name",
              "projectId"
            ],
            "description": "SmartPM Project Work Breakdown Structure data object representing the hierarchical breakdown of project work."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Project Activity Code Types",
          "urlPart": "project-activity-code-types",
          "key": "project-activity-code-types",
          "description": "SmartPM Project Activity Code Type data object representing activity categorization.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the activity code type"
              },
              "sequenceNumber": {
                "type": "integer",
                "description": "Sequence number for ordering"
              },
              "name": {
                "type": "string",
                "description": "Name of the activity code type"
              },
              "activityCodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the activity code"
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of the activity code"
                    },
                    "desc": {
                      "type": "string",
                      "description": "Description of the activity code"
                    },
                    "sequenceNumber": {
                      "type": "integer",
                      "description": "Sequence number for ordering"
                    },
                    "order": {
                      "type": "integer",
                      "description": "Order within the activity code type"
                    }
                  },
                  "description": "List of activity codes associated with this type"
                },
                "description": "List of activity codes associated with this type"
              }
            },
            "required": [
              "id",
              "sequenceNumber",
              "name",
              "activityCodes"
            ],
            "description": "SmartPM Project Activity Code Type data object representing activity categorization."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Specific Project Activity Code Type",
          "urlPart": "specific-project-activity-code-type",
          "key": "specific-project-activity-code-type",
          "description": "SmartPM Specific Project Activity Code Type data object representing a single activity code within an activity code type.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the activity code"
              },
              "parent": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the parent activity code"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the parent activity code"
                  }
                },
                "required": [
                  "id",
                  "value"
                ],
                "description": "Parent activity code, if any"
              },
              "value": {
                "type": "string",
                "description": "Value of the activity code"
              },
              "desc": {
                "type": "string",
                "description": "Description of the activity code"
              },
              "sequenceNumber": {
                "type": "integer",
                "description": "Sequence number for ordering"
              },
              "order": {
                "type": "integer",
                "description": "Order within the activity code type"
              },
              "children": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the child activity code"
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of the child activity code"
                    },
                    "sequenceNumber": {
                      "type": "integer",
                      "description": "Sequence number for ordering"
                    },
                    "order": {
                      "type": "integer",
                      "description": "Order within the activity code type"
                    }
                  },
                  "required": [
                    "id",
                    "value"
                  ],
                  "description": "Child activity codes, if any"
                },
                "description": "Child activity codes, if any"
              }
            },
            "required": [
              "id",
              "value"
            ],
            "description": "SmartPM Specific Project Activity Code Type data object representing a single activity code within an activity code type."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Project Work Breakdown Structure Element",
          "urlPart": "project-work-breakdown-structure-element",
          "key": "project-work-breakdown-structure-element",
          "description": "SmartPM Project Work Breakdown Structure Element data object representing a specific WBS element.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the WBS element"
              },
              "parentWBSId": {
                "type": "integer",
                "description": "ID of the parent WBS element, if any"
              },
              "sequenceNumber": {
                "type": "integer",
                "description": "Sequence number for ordering"
              },
              "code": {
                "type": "string",
                "description": "WBS code for the element"
              },
              "name": {
                "type": "string",
                "description": "Name of the WBS element"
              }
            },
            "required": [
              "id",
              "code",
              "name"
            ],
            "description": "SmartPM Project Work Breakdown Structure Element data object representing a specific WBS element."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Scenario",
      "urlPart": "scenario",
      "key": "scenario",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/scenario/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "Scenario V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/scenario/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ScenariosConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ScenarioDetailsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "PrecentCompleteCurveConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "PrecentCompleteCurvev2Config": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "EarnedScheduleCurveConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ScheduleCompressionConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectHealthConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ProjectHealthTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ScheduleCompressionTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "SchedulePerformanceIndexConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "SchedulePerformanceIndexTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Scenario V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Scenarios",
          "urlPart": "scenarios",
          "key": "scenarios",
          "description": "SmartPM Scenario data object representing an analysis of project schedules.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the scenario"
              },
              "name": {
                "type": "string",
                "description": "Name of the scenario"
              },
              "description": {
                "type": "string",
                "description": "Description of the scenario"
              },
              "dataDate": {
                "type": "string",
                "description": "Date of the scenario data"
              },
              "scenarioType": {
                "type": "string",
                "description": "Type of scenario (COMPLETE or PARTIAL)"
              },
              "activityId": {
                "type": "string",
                "description": "ID of the activity being tracked (for PARTIAL scenarios)"
              },
              "modelId": {
                "type": "integer",
                "description": "ID of the associated model"
              }
            },
            "required": [
              "id",
              "name",
              "dataDate",
              "scenarioType"
            ],
            "description": "SmartPM Scenario data object representing an analysis of project schedules."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Scenario Details",
          "urlPart": "scenario-details",
          "key": "scenario-details",
          "description": "SmartPM Scenario Details data object representing comprehensive information about a project scenario.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the scenario"
              },
              "dataDate": {
                "type": "string",
                "description": "Date of the scenario data"
              },
              "name": {
                "type": "string",
                "description": "Name of the scenario"
              },
              "description": {
                "type": "string",
                "description": "Description of the scenario"
              },
              "scenarioType": {
                "type": "string",
                "description": "Type of the scenario"
              },
              "activityId": {
                "type": "string",
                "description": "ID of the associated activity"
              },
              "plannedPercentComplete": {
                "type": "number",
                "description": "Planned percentage of completion"
              },
              "actualPercentComplete": {
                "type": "number",
                "description": "Actual percentage of completion"
              },
              "forecastedCompletion": {
                "type": "string",
                "description": "Forecasted completion date"
              },
              "scheduledCompletion": {
                "type": "string",
                "description": "Scheduled completion date"
              },
              "scheduleCompression": {
                "type": "integer",
                "description": "Schedule compression value"
              },
              "scheduleQualityGrade": {
                "type": "string",
                "description": "Grade indicating schedule quality"
              },
              "criticalPathDelay": {
                "type": "integer",
                "description": "Delay in the critical path"
              },
              "endDateVariance": {
                "type": "integer",
                "description": "Variance in the end date"
              },
              "futureRecovery": {
                "type": "integer",
                "description": "Future recovery value"
              },
              "health": {
                "type": "integer",
                "description": "Health indicator value"
              },
              "schedulePerformanceIndex": {
                "type": "number",
                "description": "Schedule performance index"
              },
              "baselineEndDate": {
                "type": "string",
                "description": "Baseline end date"
              },
              "contractualEndDate": {
                "type": "string",
                "description": "Contractual end date"
              },
              "plannedManpower": {
                "type": "integer",
                "description": "Planned manpower value"
              },
              "earnedManpower": {
                "type": "integer",
                "description": "Earned manpower value"
              },
              "remainingManpower": {
                "type": "integer",
                "description": "Remaining manpower value"
              },
              "actualManpower": {
                "type": "integer",
                "description": "Actual manpower value"
              },
              "currentEstimatedManpower": {
                "type": "integer",
                "description": "Current estimated manpower"
              },
              "plannedBudget": {
                "type": "integer",
                "description": "Planned budget value"
              },
              "remainingBudget": {
                "type": "integer",
                "description": "Remaining budget value"
              },
              "earnedCost": {
                "type": "integer",
                "description": "Earned cost value"
              },
              "manpowerPlannedPercentComplete": {
                "type": "number",
                "description": "Planned percentage complete for manpower"
              },
              "manpowerActualPercentComplete": {
                "type": "number",
                "description": "Actual percentage complete for manpower"
              },
              "manpowerPerformanceIndex": {
                "type": "number",
                "description": "Performance index for manpower"
              },
              "costPlannedPercentComplete": {
                "type": "number",
                "description": "Planned percentage complete for cost"
              },
              "costActualPercentComplete": {
                "type": "number",
                "description": "Actual percentage complete for cost"
              },
              "costPerformanceIndex": {
                "type": "number",
                "description": "Performance index for cost"
              },
              "resourceCount": {
                "type": "integer",
                "description": "Count of resources"
              },
              "averageDurationVariance": {
                "type": "integer",
                "description": "Average variance in duration"
              }
            },
            "required": [
              "id"
            ],
            "description": "SmartPM Scenario Details data object representing comprehensive information about a project scenario."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Precent Complete Curve",
          "urlPart": "precent-complete-curve",
          "key": "precent-complete-curve",
          "description": "SmartPM Percent Complete Curve data object representing progress data points over time.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the curve data"
              },
              "percentCompleteTypes": {
                "type": "object",
                "properties": {
                  "ACTUAL": {
                    "type": "string"
                  },
                  "SCHEDULED": {
                    "type": "string"
                  },
                  "PLANNED": {
                    "type": "string"
                  },
                  "PREDICTIVE": {
                    "type": "string"
                  },
                  "BASELINE_ID_PLANNED": {
                    "type": "string"
                  }
                },
                "description": "Types of percent complete measurements"
              },
              "data": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "ACTUAL": {
                      "type": "number"
                    },
                    "SCHEDULED": {
                      "type": "number"
                    },
                    "PLANNED": {
                      "type": "number"
                    },
                    "PREDICTIVE": {
                      "type": "number"
                    },
                    "BASELINE_ID_PLANNED": {
                      "type": "number"
                    }
                  }
                },
                "description": "Progress data points by date"
              }
            },
            "required": [
              "id",
              "percentCompleteTypes",
              "data"
            ],
            "description": "SmartPM Percent Complete Curve data object representing progress data points over time."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Precent Complete Curvev2",
          "urlPart": "precent-complete-curvev-2",
          "key": "precent-complete-curvev-2",
          "description": "SmartPM Percent Complete Curve v2 data object representing progress data points over time.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the curve data"
              },
              "percentCompleteTypes": {
                "type": "object",
                "properties": {
                  "ACTUAL": {
                    "type": "string",
                    "description": "Label for actual progress"
                  },
                  "SCHEDULED": {
                    "type": "string",
                    "description": "Label for scheduled completion"
                  },
                  "PLANNED": {
                    "type": "string",
                    "description": "Label for planned progress"
                  }
                },
                "description": "Types of percent complete measurements"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "DATE": {
                      "type": "string",
                      "description": "Date of the progress measurement"
                    },
                    "ACTUAL": {
                      "type": "number",
                      "description": "Actual progress percentage"
                    },
                    "SCHEDULED": {
                      "type": "number",
                      "description": "Scheduled progress percentage"
                    },
                    "PLANNED": {
                      "type": "number",
                      "description": "Planned progress percentage"
                    }
                  },
                  "description": "Progress data points by date"
                },
                "description": "Progress data points by date"
              }
            },
            "required": [
              "id",
              "percentCompleteTypes",
              "data"
            ],
            "description": "SmartPM Percent Complete Curve v2 data object representing progress data points over time."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Earned Schedule Curve",
          "urlPart": "earned-schedule-curve",
          "key": "earned-schedule-curve",
          "description": "Example description of the object.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the curve data"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "description": "Date of the measurement"
                    },
                    "earnedDays": {
                      "type": "number",
                      "description": "Number of days earned"
                    }
                  },
                  "description": "List of earned schedule data points"
                },
                "description": "List of earned schedule data points"
              }
            },
            "required": [
              "id",
              "data"
            ],
            "description": "Example description of the object."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Schedule Compression",
          "urlPart": "schedule-compression",
          "key": "schedule-compression",
          "description": "SmartPM Schedule Compression data object representing compression metrics for a project schedule.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "dataDate": {
                "type": "string",
                "description": "The schedule data date that was requested"
              },
              "scheduleCompression": {
                "type": "number",
                "description": "The schedule compression value"
              },
              "scheduleCompressionIndex": {
                "type": "integer",
                "description": "The schedule compression percentage"
              },
              "indicator": {
                "type": "string",
                "description": "Quality indicator for the schedule compression"
              }
            },
            "required": [
              "dataDate",
              "scheduleCompression",
              "scheduleCompressionIndex",
              "indicator"
            ],
            "description": "SmartPM Schedule Compression data object representing compression metrics for a project schedule."
          },
          "keys": [
            {
              "urlPart": "dataDate",
              "propertyNames": [
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Project Health",
          "urlPart": "project-health",
          "key": "project-health",
          "description": "SmartPM Project Health data object representing health metrics for a project schedule.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "dataDate": {
                "type": "string",
                "description": "The schedule data date that was requested"
              },
              "health": {
                "type": "integer",
                "description": "The health score value"
              },
              "risk": {
                "type": "string",
                "description": "Quality indicator for the project health"
              }
            },
            "required": [
              "dataDate",
              "health",
              "risk"
            ],
            "description": "SmartPM Project Health data object representing health metrics for a project schedule."
          },
          "keys": [
            {
              "urlPart": "dataDate",
              "propertyNames": [
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Project Health Trend",
          "urlPart": "project-health-trend",
          "key": "project-health-trend",
          "description": "SmartPM Project Health Trend data object representing health metrics over time for a project schedule.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "dataDate": {
                "type": "string",
                "description": "The schedule data date that was requested"
              },
              "health": {
                "type": "integer",
                "description": "The health score value"
              },
              "risk": {
                "type": "string",
                "description": "Quality indicator for the project health (GOOD, FINE, or BAD)"
              }
            },
            "required": [
              "dataDate",
              "health",
              "risk"
            ],
            "description": "SmartPM Project Health Trend data object representing health metrics over time for a project schedule."
          },
          "keys": [
            {
              "urlPart": "dataDate",
              "propertyNames": [
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Schedule Compression Trend",
          "urlPart": "schedule-compression-trend",
          "key": "schedule-compression-trend",
          "description": "SmartPM Schedule Compression Trend data object representing compression metrics over time for a project schedule.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "dataDate": {
                "type": "string",
                "description": "The schedule data date that was requested"
              },
              "scheduleCompression": {
                "type": "number",
                "description": "The schedule compression value"
              },
              "scheduleCompressionIndex": {
                "type": "integer",
                "description": "The schedule compression percentage"
              },
              "indicator": {
                "type": "string",
                "description": "Quality indicator for the schedule compression"
              }
            },
            "required": [
              "dataDate",
              "scheduleCompression",
              "scheduleCompressionIndex",
              "indicator"
            ],
            "description": "SmartPM Schedule Compression Trend data object representing compression metrics over time for a project schedule."
          },
          "keys": [
            {
              "urlPart": "dataDate",
              "propertyNames": [
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Schedule Performance Index",
          "urlPart": "schedule-performance-index",
          "key": "schedule-performance-index",
          "description": "SmartPM Schedule Performance Index data object representing SPI metrics for a project schedule.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "dataDate": {
                "type": "string",
                "description": "The schedule data date that was requested"
              },
              "spi": {
                "type": "number",
                "description": "The schedule performance index value"
              }
            },
            "required": [
              "dataDate",
              "spi"
            ],
            "description": "SmartPM Schedule Performance Index data object representing SPI metrics for a project schedule."
          },
          "keys": [
            {
              "urlPart": "dataDate",
              "propertyNames": [
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Schedule Performance Index Trend",
          "urlPart": "schedule-performance-index-trend",
          "key": "schedule-performance-index-trend",
          "description": "SmartPM Schedule Performance Index Trend data object representing SPI metrics over time for a project schedule.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "dataDate": {
                "type": "string",
                "description": "The schedule data date that was requested"
              },
              "spi": {
                "type": "number",
                "description": "The schedule performance index value"
              }
            },
            "required": [
              "dataDate",
              "spi"
            ],
            "description": "SmartPM Schedule Performance Index Trend data object representing SPI metrics over time for a project schedule."
          },
          "keys": [
            {
              "urlPart": "dataDate",
              "propertyNames": [
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Activity",
      "urlPart": "activity",
      "key": "activity",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/activity/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "Activity V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/activity/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ActivitiesConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Activity V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Activities",
          "urlPart": "activities",
          "key": "activities",
          "description": "SmartPM Activity data object representing activity details for a project schedule.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "activityId": {
                "type": "string",
                "description": "Unique identifier for the activity"
              },
              "name": {
                "type": "string",
                "description": "Name of the activity"
              },
              "percentCompleteType": {
                "type": "string",
                "description": "Type of percent complete measurement"
              },
              "durationPercentComplete": {
                "type": "number",
                "description": "Duration-based percent complete"
              },
              "physicalPercentComplete": {
                "type": "number",
                "description": "Physical percent complete"
              },
              "unitsPercentComplete": {
                "type": "number",
                "description": "Units-based percent complete"
              },
              "floatTotal": {
                "type": "number",
                "description": "Total float"
              },
              "nativeFloatTotal": {
                "type": "number",
                "description": "Native total float"
              },
              "floatFree": {
                "type": "number",
                "description": "Free float"
              },
              "activityType": {
                "type": "string",
                "description": "Type of activity"
              },
              "constraintType": {
                "type": "string",
                "description": "Type of schedule constraint"
              },
              "externalId": {
                "type": "string",
                "description": "External identifier"
              },
              "plannedDuration": {
                "type": "number",
                "description": "Planned duration"
              },
              "remainingDuration": {
                "type": "number",
                "description": "Remaining duration"
              },
              "actualDuration": {
                "type": "number",
                "description": "Actual duration"
              },
              "plannedBudget": {
                "type": "number",
                "description": "Planned budget"
              },
              "plannedManpower": {
                "type": "number",
                "description": "Planned manpower"
              },
              "baseline": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Baseline start date"
                  },
                  "finishDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Baseline finish date"
                  },
                  "duration": {
                    "type": "number",
                    "description": "Baseline duration"
                  },
                  "critical": {
                    "type": "boolean",
                    "description": "Whether activity is critical in baseline"
                  },
                  "type": {
                    "type": "string",
                    "description": "Baseline type"
                  }
                },
                "required": [
                  "startDate",
                  "finishDate",
                  "duration",
                  "critical",
                  "type"
                ],
                "description": "Baseline information"
              },
              "inLongestPath": {
                "type": "boolean",
                "description": "Whether activity is in the longest path"
              },
              "retainLogic": {
                "type": "boolean",
                "description": "Whether to retain logic"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "Start date"
              },
              "finishDate": {
                "type": "string",
                "format": "date-time",
                "description": "Finish date"
              },
              "lateStartDate": {
                "type": "string",
                "format": "date-time",
                "description": "Late start date"
              },
              "lateFinishDate": {
                "type": "string",
                "format": "date-time",
                "description": "Late finish date"
              },
              "actualStartDate": {
                "type": "string",
                "format": "date-time",
                "description": "Actual start date"
              },
              "actualFinishDate": {
                "type": "string",
                "format": "date-time",
                "description": "Actual finish date"
              },
              "constrainedDate": {
                "type": "string",
                "format": "date-time",
                "description": "Constrained date"
              },
              "resumeDate": {
                "type": "string",
                "format": "date-time",
                "description": "Resume date"
              },
              "sourceStartDate": {
                "type": "string",
                "format": "date-time",
                "description": "Source start date"
              },
              "sourceFinishDate": {
                "type": "string",
                "format": "date-time",
                "description": "Source finish date"
              },
              "sourceActualStartDate": {
                "type": "string",
                "format": "date-time",
                "description": "Source actual start date"
              },
              "sourceActualFinishDate": {
                "type": "string",
                "format": "date-time",
                "description": "Source actual finish date"
              },
              "percentComplete": {
                "type": "number",
                "description": "Overall percent complete"
              }
            },
            "required": [
              "activityId",
              "name",
              "percentCompleteType",
              "durationPercentComplete",
              "physicalPercentComplete",
              "unitsPercentComplete",
              "activityType",
              "constraintType",
              "externalId",
              "plannedDuration",
              "remainingDuration",
              "actualDuration",
              "plannedBudget",
              "plannedManpower",
              "baseline",
              "inLongestPath",
              "retainLogic",
              "startDate",
              "finishDate",
              "lateStartDate",
              "lateFinishDate",
              "actualStartDate",
              "actualFinishDate",
              "sourceStartDate",
              "sourceFinishDate",
              "sourceActualStartDate",
              "sourceActualFinishDate",
              "percentComplete"
            ],
            "description": "SmartPM Activity data object representing activity details for a project schedule."
          },
          "keys": [
            {
              "urlPart": "activityId",
              "propertyNames": [
                "activityId"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Import",
      "urlPart": "import",
      "key": "import",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/import/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "properties": {
              "ImportImportFileConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "UploadUploadFileConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Import V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/import/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ImportFileConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ImportStatusConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "UploadFileConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Import V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Import File",
          "urlPart": "import-file",
          "key": "import-file",
          "description": "SmartPM Import File data object representing file import status.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "files": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "description": "ID of the imported file"
                    },
                    "importId": {
                      "type": "string",
                      "description": "Import ID for this specific file"
                    },
                    "valid": {
                      "type": "boolean",
                      "description": "Whether the file is valid"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Array of error messages if any"
                      },
                      "description": "Array of error messages if any"
                    }
                  },
                  "required": [
                    "fileId",
                    "importId",
                    "valid",
                    "errors"
                  ],
                  "description": "Array of file import results"
                },
                "description": "Array of file import results"
              },
              "importId": {
                "type": "string",
                "description": "Unique identifier for the import"
              },
              "status": {
                "type": "string",
                "description": "Status of the import"
              }
            },
            "required": [
              "files",
              "importId",
              "status"
            ],
            "description": "SmartPM Import File data object representing file import status."
          },
          "keys": [
            {
              "urlPart": "importId",
              "propertyNames": [
                "importId"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Import",
              "urlPart": "import",
              "key": "import",
              "description": "Import files into a SmartPM project",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fileId": {
                          "type": "string",
                          "description": "The fileId provided by the /public/v1/upload endpoint"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schedule being imported"
                        },
                        "dataDate": {
                          "type": "string",
                          "description": "Optional data date in the event that the file does not have a data date"
                        }
                      },
                      "required": [
                        "fileId",
                        "name"
                      ],
                      "description": "Array of files to import"
                    },
                    "description": "Array of files to import"
                  },
                  "sendNotification": {
                    "type": "boolean",
                    "description": "Send a notification whenever the delay analysis has completed"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The project to import the files into"
                  }
                },
                "required": [
                  "files",
                  "projectId"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fileId": {
                          "type": "string",
                          "description": "ID of the imported file"
                        },
                        "importId": {
                          "type": "string",
                          "description": "Import ID for this specific file"
                        },
                        "valid": {
                          "type": "boolean",
                          "description": "Whether the file is valid"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Array of error messages if any"
                          },
                          "description": "Array of error messages if any"
                        }
                      },
                      "required": [
                        "fileId",
                        "importId",
                        "valid",
                        "errors"
                      ],
                      "description": "Array of file import results"
                    },
                    "description": "Array of file import results"
                  },
                  "importId": {
                    "type": "string",
                    "description": "Unique identifier for the import"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the import"
                  }
                },
                "required": [
                  "files",
                  "importId",
                  "status"
                ],
                "description": "SmartPM Import File data object representing file import status."
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "name": "Import Status",
          "urlPart": "import-status",
          "key": "import-status",
          "description": "SmartPM Import Status data object representing the status of a file import.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Status message of the import"
              },
              "importId": {
                "type": "string",
                "description": "Unique identifier for the import"
              }
            },
            "required": [
              "message",
              "importId"
            ],
            "description": "SmartPM Import Status data object representing the status of a file import."
          },
          "keys": [
            {
              "urlPart": "importId",
              "propertyNames": [
                "importId"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Upload File",
          "urlPart": "upload-file",
          "key": "upload-file",
          "description": "SmartPM Upload File data object representing the result of a file upload.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "fileId": {
                "type": "string",
                "description": "Unique identifier for the uploaded file"
              },
              "message": {
                "type": "string",
                "description": "Optional message from the upload operation"
              }
            },
            "required": [
              "fileId"
            ],
            "description": "SmartPM Upload File data object representing the result of a file upload."
          },
          "keys": [
            {
              "urlPart": "fileId",
              "propertyNames": [
                "fileId"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Upload",
              "urlPart": "upload",
              "key": "upload",
              "description": "Upload a file to SmartPM for later import",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "fileUrl": {
                    "type": "string",
                    "description": "URL of the file to upload"
                  },
                  "fileName": {
                    "type": "string",
                    "description": "Name of the file being uploaded"
                  }
                },
                "required": [
                  "fileUrl",
                  "fileName"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "fileId": {
                    "type": "string",
                    "description": "Unique identifier for the uploaded file"
                  },
                  "message": {
                    "type": "string",
                    "description": "Optional message from the upload operation"
                  }
                },
                "required": [
                  "fileId"
                ],
                "description": "SmartPM Upload File data object representing the result of a file upload."
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User",
      "urlPart": "user",
      "key": "user",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/user/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "properties": {
              "AddUsersConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "RemoveUsersConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "UpdateUsersConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "CreateCompanyUsersConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "UpdateCompanyUsersConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              },
              "DeleteCompanyUsersConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "User V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/user/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "UsersConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "CompanyUsersConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "User V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Users",
          "urlPart": "users",
          "key": "users",
          "description": "SmartPM User data object representing user details and roles for a project.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the user"
              },
              "user": {
                "type": "string",
                "description": "User email address"
              },
              "role": {
                "type": "string",
                "description": "User\u0027s role in the project"
              }
            },
            "required": [
              "id",
              "user",
              "role"
            ],
            "description": "SmartPM User data object representing user details and roles for a project."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Add",
              "urlPart": "add",
              "key": "add",
              "description": "Add a user to a SmartPM project with a specified role",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "The project to add the user to"
                  },
                  "user": {
                    "type": "string",
                    "description": "Email address of the user to add"
                  },
                  "role": {
                    "type": "string",
                    "description": "Role to assign to the user"
                  }
                },
                "required": [
                  "projectId",
                  "user",
                  "role"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the user"
                  },
                  "user": {
                    "type": "string",
                    "description": "User email address"
                  },
                  "role": {
                    "type": "string",
                    "description": "User\u0027s role in the project"
                  }
                },
                "required": [
                  "id",
                  "user",
                  "role"
                ],
                "description": "SmartPM User data object representing user details and roles for a project."
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            },
            {
              "name": "Remove",
              "urlPart": "remove",
              "key": "remove",
              "description": "Remove a user from a SmartPM project",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "The project to remove the user from"
                  },
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user to remove"
                  }
                },
                "required": [
                  "projectId",
                  "userId"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Whether the user was successfully removed"
                  },
                  "message": {
                    "type": "string",
                    "description": "Status message of the operation"
                  }
                },
                "required": [
                  "success",
                  "message"
                ]
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            },
            {
              "name": "Update",
              "urlPart": "update",
              "key": "update",
              "description": "Update a user\u0027s role in a SmartPM project",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "The project to update the user in"
                  },
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user to update"
                  },
                  "user": {
                    "type": "string",
                    "description": "Email address of the user"
                  },
                  "role": {
                    "type": "string",
                    "description": "New role to assign to the user"
                  }
                },
                "required": [
                  "projectId",
                  "userId",
                  "user",
                  "role"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the user"
                  },
                  "user": {
                    "type": "string",
                    "description": "User email address"
                  },
                  "role": {
                    "type": "string",
                    "description": "Updated role in the project"
                  }
                },
                "required": [
                  "id",
                  "user",
                  "role"
                ]
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "name": "Company Users",
          "urlPart": "company-users",
          "key": "company-users",
          "description": "SmartPM Company User data object representing user details and roles for a company.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the user"
              },
              "firstName": {
                "type": "string",
                "description": "First name of the user"
              },
              "lastName": {
                "type": "string",
                "description": "Last name of the user"
              },
              "email": {
                "type": "string",
                "description": "Email address of the user"
              },
              "phoneNumber": {
                "type": "string",
                "description": "Phone number of the user"
              },
              "title": {
                "type": "string",
                "description": "Title of the user"
              },
              "lastLogin": {
                "type": "string",
                "format": "date-time",
                "description": "UTC Timestamp of last login"
              },
              "loginCount": {
                "type": "integer",
                "description": "Number of times the user has logged in"
              },
              "role": {
                "type": "string",
                "description": "Role of the user in the company"
              },
              "ssoUser": {
                "type": "boolean",
                "description": "Whether the user is an SSO user"
              },
              "disableNotification": {
                "type": "boolean",
                "description": "Whether notifications are disabled for the SSO user"
              }
            },
            "required": [
              "id",
              "firstName",
              "lastName",
              "email",
              "lastLogin",
              "loginCount",
              "role"
            ],
            "description": "SmartPM Company User data object representing user details and roles for a company."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Create",
              "urlPart": "create",
              "key": "create",
              "description": "Create a new company user with specified details and role",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user",
                    "minLength": 1
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "minLength": 1
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number of the user"
                  },
                  "role": {
                    "type": "string",
                    "description": "Role to assign to the user",
                    "minLength": 1
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the user"
                  },
                  "ssoUser": {
                    "type": "boolean",
                    "description": "Whether the user is an SSO user"
                  },
                  "disableNotification": {
                    "type": "boolean",
                    "description": "Whether notifications are disabled for the SSO user"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "role"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the user",
                    "minLength": 1
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user",
                    "minLength": 1
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "minLength": 1
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number of the user",
                    "minLength": 1
                  },
                  "role": {
                    "type": "string",
                    "description": "Role assigned to the user",
                    "minLength": 1
                  },
                  "lastLogin": {
                    "type": "string",
                    "description": "UTC timestamp of last login",
                    "minLength": 1
                  },
                  "loginCount": {
                    "type": "integer",
                    "description": "Number of times the user has logged in"
                  }
                },
                "required": [
                  "id",
                  "firstName",
                  "lastName",
                  "email",
                  "phoneNumber",
                  "role",
                  "lastLogin",
                  "loginCount"
                ]
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            },
            {
              "name": "Update",
              "urlPart": "update",
              "key": "update",
              "description": "Update an existing company user with specified details and role",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user to update",
                    "minLength": 1
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user",
                    "minLength": 1
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "minLength": 1
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number of the user"
                  },
                  "role": {
                    "type": "string",
                    "description": "Role to assign to the user",
                    "minLength": 1
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the user"
                  },
                  "ssoUser": {
                    "type": "boolean",
                    "description": "Whether the user is an SSO user"
                  }
                },
                "required": [
                  "userId",
                  "firstName",
                  "lastName",
                  "email",
                  "role",
                  "title"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the user",
                    "minLength": 1
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user",
                    "minLength": 1
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "minLength": 1
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number of the user",
                    "minLength": 1
                  },
                  "role": {
                    "type": "string",
                    "description": "Role assigned to the user",
                    "minLength": 1
                  },
                  "lastLogin": {
                    "type": "string",
                    "description": "UTC timestamp of last login",
                    "minLength": 1
                  },
                  "loginCount": {
                    "type": "integer",
                    "description": "Number of times the user has logged in"
                  }
                },
                "required": [
                  "id",
                  "firstName",
                  "lastName",
                  "email",
                  "phoneNumber",
                  "role",
                  "lastLogin",
                  "loginCount"
                ]
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            },
            {
              "name": "Delete",
              "urlPart": "delete",
              "key": "delete",
              "description": "Delete an existing company user",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user to delete",
                    "minLength": 1
                  }
                },
                "required": [
                  "userId"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Whether the user was successfully deleted"
                  },
                  "message": {
                    "type": "string",
                    "description": "Status message of the operation"
                  }
                },
                "required": [
                  "success",
                  "message"
                ]
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "External Reference",
      "urlPart": "externalreference",
      "key": "externalreference",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/externalreference/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "properties": {
              "AddExternalReferenceConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "ExternalReference V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/externalreference/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ExternalReferenceConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "ExternalReference V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "External Reference",
          "urlPart": "external-reference",
          "key": "external-reference",
          "description": "SmartPM External Reference data object representing external system links for a project.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "description": "The external system provider name",
                "minLength": 1
              },
              "externalId": {
                "type": "string",
                "description": "The ID of the resource in the external system",
                "minLength": 1
              }
            },
            "required": [
              "provider",
              "externalId"
            ],
            "description": "SmartPM External Reference data object representing external system links for a project."
          },
          "keys": [
            {
              "urlPart": "provider,externalId",
              "propertyNames": [
                "provider",
                "externalId"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Add",
              "urlPart": "add",
              "key": "add",
              "description": "Add an external reference link to a SmartPM project",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "The project to add the external reference to",
                    "minLength": 1
                  },
                  "provider": {
                    "type": "string",
                    "description": "The external system provider name",
                    "minLength": 1
                  },
                  "externalId": {
                    "type": "string",
                    "description": "The ID of the resource in the external system",
                    "minLength": 1
                  }
                },
                "required": [
                  "projectId",
                  "provider",
                  "externalId"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "The external system provider name",
                    "minLength": 1
                  },
                  "externalId": {
                    "type": "string",
                    "description": "The ID of the resource in the external system",
                    "minLength": 1
                  }
                },
                "required": [
                  "provider",
                  "externalId"
                ]
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Schedules",
      "urlPart": "schedules",
      "key": "schedules",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/schedules/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "Schedules V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/schedules/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ScenarioSchedulesConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ScenarioSchedulesv2Config": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Schedules V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Scenario Schedules",
          "urlPart": "scenario-schedules",
          "key": "scenario-schedules",
          "description": "SmartPM Scenario Schedule data object representing schedule details for a project scenario.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the schedule"
              },
              "fileName": {
                "type": "string",
                "description": "Name of the uploaded schedule file"
              },
              "fileId": {
                "type": "string",
                "description": "Unique identifier for the uploaded file"
              },
              "dataDate": {
                "type": "string",
                "description": "Data date of the schedule in YYYY-MM-DD format"
              }
            },
            "required": [
              "id",
              "fileName",
              "fileId",
              "dataDate"
            ],
            "description": "SmartPM Scenario Schedule data object representing schedule details for a project scenario."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Scenario Schedulesv2",
          "urlPart": "scenario-schedulesv-2",
          "key": "scenario-schedulesv-2",
          "description": "SmartPM Scenario Schedule v2 data object representing schedule details for a project scenario.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the schedule"
              },
              "fileName": {
                "type": "string",
                "description": "Name of the uploaded schedule file"
              },
              "fileId": {
                "type": "string",
                "description": "Unique identifier for the uploaded file"
              },
              "activityCount": {
                "type": "integer",
                "description": "Number of activities in the schedule"
              },
              "dataDate": {
                "type": "string",
                "description": "Data date of the schedule"
              },
              "baseline": {
                "type": "boolean",
                "description": "Is this schedule being used as a baseline for the analysis"
              },
              "sourceEndDate": {
                "type": "string",
                "description": "The end date that was in the source system"
              }
            },
            "required": [
              "id",
              "fileName",
              "fileId",
              "activityCount",
              "dataDate",
              "baseline",
              "sourceEndDate"
            ],
            "description": "SmartPM Scenario Schedule v2 data object representing schedule details for a project scenario."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Company",
      "urlPart": "company",
      "key": "company",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/company/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "properties": {
              "UpdateCompanyConfigConfig": {
                "type": "object",
                "properties": {
                  "ProcessQueuedEvent": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Company V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/company/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "CompanyConfigConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Company V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Company Config",
          "urlPart": "company-config",
          "key": "company-config",
          "description": "SmartPM Company Configuration data object representing system settings and permissions.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "configuration": {
                "type": "string",
                "description": "The configuration key"
              },
              "setting": {
                "type": "string",
                "description": "The value or setting for this configuration"
              },
              "permission": {
                "type": "string",
                "description": "The permission level required for this configuration, if any"
              }
            },
            "required": [
              "configuration",
              "setting"
            ],
            "description": "SmartPM Company Configuration data object representing system settings and permissions."
          },
          "keys": [
            {
              "urlPart": "configuration",
              "propertyNames": [
                "configuration"
              ],
              "isPrimary": true
            }
          ],
          "actions": [
            {
              "name": "Update",
              "urlPart": "update",
              "key": "update",
              "description": "Update a company configuration setting",
              "createRtap": true,
              "inputSchema": {
                "type": "object",
                "properties": {
                  "configuration": {
                    "type": "string",
                    "description": "The configuration key to update"
                  },
                  "setting": {
                    "type": "string",
                    "description": "The new value for the configuration"
                  }
                },
                "required": [
                  "configuration",
                  "setting"
                ]
              },
              "outputSchema": {
                "type": "object",
                "properties": {
                  "configuration": {
                    "type": "string",
                    "description": "The configuration key"
                  },
                  "setting": {
                    "type": "string",
                    "description": "The value or setting for this configuration"
                  },
                  "permission": {
                    "type": "string",
                    "description": "The permission level required for this configuration, if any"
                  }
                },
                "required": [
                  "configuration",
                  "setting"
                ]
              },
              "failureSchema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "user_defined_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "details": true
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Schedule Quality",
      "urlPart": "schedulequality",
      "key": "schedulequality",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/schedulequality/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "ScheduleQuality V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/schedulequality/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ScheduleQualityConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ScheduleQualityMetricDetailsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "AllQualityProfilesConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "QualityProfileConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "ScheduleQuality V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Schedule Quality",
          "urlPart": "schedule-quality",
          "key": "schedule-quality",
          "description": "SmartPM Schedule Quality data object representing quality metrics and grades for a project scenario.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID containing the scenario"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID for the schedule quality"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the metric"
                    },
                    "message": {
                      "type": "string",
                      "description": "Description or message about the metric"
                    },
                    "value": {
                      "type": "number",
                      "description": "Numeric value of the metric"
                    },
                    "normalizedValue": {
                      "type": "number",
                      "description": "Normalized value of the metric"
                    },
                    "indicator": {
                      "type": "string",
                      "description": "Quality indicator for the metric"
                    }
                  },
                  "required": [
                    "name",
                    "message",
                    "value",
                    "normalizedValue",
                    "indicator"
                  ],
                  "description": "Array of schedule quality metrics"
                },
                "description": "Array of schedule quality metrics"
              },
              "grade": {
                "type": "object",
                "properties": {
                  "mark": {
                    "type": "string",
                    "description": "Letter grade mark"
                  },
                  "indicator": {
                    "type": "string",
                    "description": "Quality indicator for the grade"
                  }
                },
                "required": [
                  "mark",
                  "indicator"
                ],
                "description": "Overall grade for the schedule quality"
              },
              "qualityProfileId": {
                "type": "string",
                "description": "ID of the quality profile used for assessment"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "metrics",
              "grade"
            ],
            "description": "SmartPM Schedule Quality data object representing quality metrics and grades for a project scenario."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId",
              "propertyNames": [
                "projectId",
                "scenarioId"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Schedule Quality Metric Details",
          "urlPart": "schedule-quality-metric-details",
          "key": "schedule-quality-metric-details",
          "description": "SmartPM Schedule Quality Metric Details data object representing activity-level quality metrics.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The type of metric detail"
              },
              "activityId": {
                "type": "string",
                "description": "The ID of the activity"
              },
              "activityName": {
                "type": "string",
                "description": "The name of the activity"
              },
              "value": {
                "type": "integer",
                "description": "The metric value for this activity"
              }
            },
            "required": [
              "@type",
              "activityId",
              "activityName",
              "value"
            ],
            "description": "SmartPM Schedule Quality Metric Details data object representing activity-level quality metrics."
          },
          "keys": [
            {
              "urlPart": "activityId",
              "propertyNames": [
                "activityId"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "All Quality Profiles",
          "urlPart": "all-quality-profiles",
          "key": "all-quality-profiles",
          "description": "Example description of the object.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique identifier of the quality profile"
              },
              "companyId": {
                "type": "string",
                "description": "The company ID that owns this quality profile"
              },
              "name": {
                "type": "string",
                "description": "The name of the quality profile"
              },
              "scoreReporting": {
                "type": "string",
                "description": "The score reporting method for this profile"
              },
              "qualityThreshold": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the threshold"
                    },
                    "metric": {
                      "type": "string",
                      "description": "The metric being measured"
                    },
                    "impactType": {
                      "type": "string",
                      "description": "The type of impact this metric has"
                    },
                    "fineImpact": {
                      "type": "number",
                      "description": "The fine impact value"
                    },
                    "badImpact": {
                      "type": "number",
                      "description": "The bad impact value"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the threshold value"
                          },
                          "indicator": {
                            "type": "string",
                            "description": "The indicator for this threshold value"
                          },
                          "value": {
                            "type": "number",
                            "description": "The numeric value for this threshold"
                          }
                        },
                        "required": [
                          "id",
                          "indicator"
                        ],
                        "description": "Array of threshold values"
                      },
                      "description": "Array of threshold values"
                    },
                    "filters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true,
                        "description": "Array of filters applied to this threshold"
                      },
                      "description": "Array of filters applied to this threshold"
                    },
                    "evaluationTarget": {
                      "type": "string",
                      "description": "The target for evaluation"
                    },
                    "isHidden": {
                      "type": "boolean",
                      "description": "Whether this threshold is hidden"
                    }
                  },
                  "required": [
                    "id",
                    "metric",
                    "impactType",
                    "values",
                    "filters",
                    "evaluationTarget",
                    "isHidden"
                  ],
                  "description": "Array of quality thresholds for different metrics"
                },
                "description": "Array of quality thresholds for different metrics"
              },
              "configuration": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "methodType": {
                      "type": "string",
                      "description": "The method type for this configuration setting"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value for this configuration setting"
                    }
                  },
                  "required": [
                    "methodType",
                    "value"
                  ]
                },
                "description": "Configuration settings for the quality profile"
              }
            },
            "required": [
              "id",
              "name",
              "scoreReporting",
              "qualityThreshold",
              "configuration"
            ],
            "description": "Example description of the object."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Quality Profile",
          "urlPart": "quality-profile",
          "key": "quality-profile",
          "description": "Example description of the object.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Example primary key of the object"
              },
              "companyId": {
                "type": "string",
                "description": "The company ID that owns this quality profile"
              },
              "name": {
                "type": "string",
                "description": "The name of the quality profile"
              },
              "scoreReporting": {
                "type": "string",
                "description": "The score reporting method for this profile"
              },
              "qualityThreshold": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the threshold"
                    },
                    "metric": {
                      "type": "string",
                      "description": "The metric being measured"
                    },
                    "impactType": {
                      "type": "string",
                      "description": "The type of impact this metric has"
                    },
                    "fineImpact": {
                      "type": "number",
                      "description": "The fine impact value"
                    },
                    "badImpact": {
                      "type": "number",
                      "description": "The bad impact value"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the threshold value"
                          },
                          "indicator": {
                            "type": "string",
                            "description": "The indicator for this threshold value"
                          },
                          "value": {
                            "type": "number",
                            "description": "The numeric value for this threshold"
                          }
                        },
                        "required": [
                          "id",
                          "indicator"
                        ],
                        "description": "Array of threshold values"
                      },
                      "description": "Array of threshold values"
                    },
                    "filters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true,
                        "description": "Array of filters applied to this threshold"
                      },
                      "description": "Array of filters applied to this threshold"
                    },
                    "evaluationTarget": {
                      "type": "string",
                      "description": "The target for evaluation"
                    },
                    "isHidden": {
                      "type": "boolean",
                      "description": "Whether this threshold is hidden"
                    }
                  },
                  "required": [
                    "id",
                    "metric",
                    "impactType",
                    "values",
                    "filters",
                    "evaluationTarget",
                    "isHidden"
                  ],
                  "description": "Array of quality thresholds for different metrics"
                },
                "description": "Array of quality thresholds for different metrics"
              },
              "configuration": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "methodType": {
                      "type": "string",
                      "description": "The method type for this configuration setting"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value for this configuration setting"
                    }
                  },
                  "required": [
                    "methodType",
                    "value"
                  ]
                },
                "description": "Configuration settings for the quality profile"
              }
            },
            "required": [
              "id",
              "name",
              "scoreReporting",
              "qualityThreshold",
              "configuration"
            ],
            "description": "Example description of the object."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Change Log",
      "urlPart": "changelog",
      "key": "changelog",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/changelog/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "ChangeLog V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/changelog/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ChangeLogSummaryConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ChangeLogDetailsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "AllChangeLogDetailsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "ChangeLog V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Change Log Summary",
          "urlPart": "change-log-summary",
          "key": "change-log-summary",
          "description": "SmartPM Change Log Summary data object representing changes that have happened to a scenario over time.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID containing the scenario"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID for the change log"
              },
              "dataDate": {
                "type": "string",
                "description": "The date for which changes are summarized"
              },
              "metrics": {
                "type": "object",
                "properties": {
                  "CriticalChanges": {
                    "type": "integer",
                    "description": "The number of changes for an activity on the critical path for a specific period"
                  },
                  "LogicChanges": {
                    "type": "integer",
                    "description": "The number of changes that happened to logic ties for a specific period"
                  },
                  "DelayedActivityChanges": {
                    "type": "integer",
                    "description": "The number of changes that happened to activities with delays for a specific period"
                  },
                  "DurationChanges": {
                    "type": "integer",
                    "description": "The number of activities where the duration changed for a specific period"
                  },
                  "FlaggedChanges": {
                    "type": "integer",
                    "description": "The number of changes that have been flagged for a specific period"
                  },
                  "AllCalendarChanges": {
                    "type": "integer",
                    "description": "The number of calendar / worktime changes that happened for a specific period"
                  },
                  "ActivityChanges": {
                    "type": "integer",
                    "description": "The number of changes to activities for a specific period"
                  },
                  "CalendarChanges": {
                    "type": "integer",
                    "description": "The number of changes to calendars for a specific period"
                  },
                  "WorkingDayChanges": {
                    "type": "integer",
                    "description": "The number of worktime changes for a specific period"
                  },
                  "NearCriticalChanges": {
                    "type": "integer",
                    "description": "The number of near critical (\u003C 10 days of float) for a specific period"
                  }
                },
                "required": [
                  "CriticalChanges",
                  "LogicChanges",
                  "DelayedActivityChanges",
                  "DurationChanges",
                  "FlaggedChanges",
                  "AllCalendarChanges",
                  "ActivityChanges",
                  "CalendarChanges",
                  "WorkingDayChanges",
                  "NearCriticalChanges"
                ],
                "description": "Metrics summarizing different types of changes"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "dataDate",
              "metrics"
            ],
            "description": "SmartPM Change Log Summary data object representing changes that have happened to a scenario over time."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId,dataDate",
              "propertyNames": [
                "projectId",
                "scenarioId",
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Change Log Details",
          "urlPart": "change-log-details",
          "key": "change-log-details",
          "description": "SmartPM Change Log Details data object representing detailed changes for a specific change type.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID containing the scenario"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID for the change log"
              },
              "type": {
                "type": "string",
                "description": "The type of changes being detailed"
              },
              "differences": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that was updated"
                    },
                    "oldValue": {
                      "description": "The original value of the field"
                    },
                    "newValue": {
                      "type": "string",
                      "description": "The updated value of the field"
                    }
                  },
                  "required": [
                    "field",
                    "newValue"
                  ],
                  "description": "The differences that happened for the activities"
                },
                "description": "The differences that happened for the activities"
              },
              "action": {
                "type": "string",
                "description": "The action that occurred on the activity (ADDED, DELETED, or UPDATED)"
              },
              "entity": {
                "type": "string",
                "description": "The entity that was updated (Activity, Logic, Calendar, or CalendarWorktime)"
              },
              "friendlyId": {
                "type": "string",
                "description": "The friendly display name for the entity that was modified"
              },
              "auditDate": {
                "type": "string",
                "description": "The date the change was made"
              },
              "floatTotal": {
                "type": "integer",
                "description": "The lowest total float for an activity that was changed"
              },
              "activityIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The IDs of activities that were impacted"
                },
                "description": "The IDs of activities that were impacted"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "type",
              "differences",
              "action",
              "entity",
              "friendlyId",
              "auditDate",
              "floatTotal",
              "activityIds"
            ],
            "description": "SmartPM Change Log Details data object representing detailed changes for a specific change type."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId,type,friendlyId",
              "propertyNames": [
                "projectId",
                "scenarioId",
                "type",
                "friendlyId"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "All Change Log Details",
          "urlPart": "all-change-log-details",
          "key": "all-change-log-details",
          "description": "SmartPM Change Log Details data object representing all changes made to a project scenario.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID containing the scenario"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID for the change log"
              },
              "differences": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field that was updated"
                    },
                    "oldValue": {
                      "description": "The original value of the field"
                    },
                    "newValue": {
                      "type": "string",
                      "description": "The updated value of the field"
                    }
                  },
                  "required": [
                    "field",
                    "newValue"
                  ],
                  "description": "The differences that happened for the activities"
                },
                "description": "The differences that happened for the activities"
              },
              "action": {
                "type": "string",
                "description": "The action that occurred on the activity (ADDED, DELETED, or UPDATED)"
              },
              "entity": {
                "type": "string",
                "description": "The entity that was updated (Activity, Logic, Calendar, or CalendarWorktime)"
              },
              "friendlyId": {
                "type": "string",
                "description": "The friendly display name for the entity that was modified"
              },
              "auditDate": {
                "type": "string",
                "description": "The date the change was made"
              },
              "floatTotal": {
                "type": "integer",
                "description": "The lowest total float for an activity that was changed"
              },
              "activityIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The IDs of activities that were impacted"
                },
                "description": "The IDs of activities that were impacted"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "differences",
              "action",
              "entity",
              "friendlyId",
              "auditDate",
              "floatTotal",
              "activityIds"
            ],
            "description": "SmartPM Change Log Details data object representing all changes made to a project scenario."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId,friendlyId",
              "propertyNames": [
                "projectId",
                "scenarioId",
                "friendlyId"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Delay",
      "urlPart": "delay",
      "key": "delay",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/delay/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "Delay V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/delay/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "DelayTableConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Delay V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Delay Table",
          "urlPart": "delay-table",
          "key": "delay-table",
          "description": "SmartPM Delay Table data object representing delay information for a project scenario.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID"
              },
              "period": {
                "type": "integer",
                "description": "The period number"
              },
              "scheduleName": {
                "type": "string",
                "description": "The name of the schedule"
              },
              "dataDate": {
                "type": "string",
                "description": "The data date"
              },
              "endDate": {
                "type": "string",
                "description": "The end date"
              },
              "endDateVariance": {
                "type": "object",
                "properties": {
                  "period": {
                    "type": "integer",
                    "description": "The period value"
                  },
                  "cumulative": {
                    "type": "integer",
                    "description": "The cumulative value"
                  }
                },
                "required": [
                  "cumulative"
                ],
                "description": "End date variance information"
              },
              "criticalPathDelay": {
                "type": "object",
                "properties": {
                  "period": {
                    "type": "integer",
                    "description": "The period value"
                  },
                  "cumulative": {
                    "type": "integer",
                    "description": "The cumulative value"
                  }
                },
                "required": [
                  "cumulative"
                ],
                "description": "Critical path delay information"
              },
              "criticalPathRecovery": {
                "type": "object",
                "properties": {
                  "period": {
                    "type": "integer",
                    "description": "The period value"
                  },
                  "cumulative": {
                    "type": "integer",
                    "description": "The cumulative value"
                  }
                },
                "required": [
                  "cumulative"
                ],
                "description": "Critical path recovery information"
              },
              "delayRecovery": {
                "type": "object",
                "properties": {
                  "period": {
                    "type": "integer",
                    "description": "The period value"
                  },
                  "cumulative": {
                    "type": "integer",
                    "description": "The cumulative value"
                  }
                },
                "required": [
                  "cumulative"
                ],
                "description": "Delay recovery information"
              },
              "filterId": {
                "type": "integer",
                "description": "The filter ID"
              },
              "delays": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "activityId": {
                      "type": "string",
                      "description": "The activity ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The activity name"
                    },
                    "days": {
                      "type": "integer",
                      "description": "Number of delay days"
                    }
                  },
                  "required": [
                    "activityId",
                    "name",
                    "days"
                  ],
                  "description": "List of delays"
                },
                "description": "List of delays"
              },
              "recoveries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "activityId": {
                      "type": "string",
                      "description": "The activity ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The activity name"
                    }
                  },
                  "required": [
                    "activityId",
                    "name"
                  ],
                  "description": "List of recoveries"
                },
                "description": "List of recoveries"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "period",
              "scheduleName",
              "dataDate",
              "endDate",
              "endDateVariance",
              "criticalPathDelay",
              "criticalPathRecovery",
              "delayRecovery",
              "delays",
              "recoveries"
            ],
            "description": "SmartPM Delay Table data object representing delay information for a project scenario."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId,dataDate",
              "propertyNames": [
                "projectId",
                "scenarioId",
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Reporting",
      "urlPart": "reporting",
      "key": "reporting",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/reporting/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "Reporting V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/reporting/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ShouldStartFinishReportConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "ShouldStartFinishTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "MonthlyDistributionConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Reporting V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Should Start Finish Report",
          "urlPart": "should-start-finish-report",
          "key": "should-start-finish-report",
          "description": "SmartPM Should Start/Finish Report data object representing activity progress between specified dates.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID containing the scenario"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID for the report"
              },
              "startDate": {
                "type": "string",
                "description": "The start date of the window"
              },
              "finishDate": {
                "type": "string",
                "description": "The finish date of the window"
              },
              "total": {
                "type": "integer",
                "description": "The total number of activities that should have had some progress during the specified window"
              },
              "startedLate": {
                "type": "integer",
                "description": "The number of activities that started late"
              },
              "finishedLate": {
                "type": "integer",
                "description": "The number of activities that finished late"
              },
              "didNotStart": {
                "type": "integer",
                "description": "The number of activities that did not start"
              },
              "didNotFinish": {
                "type": "integer",
                "description": "The number of activities that did not finish"
              },
              "totalOnTimeHitRate": {
                "type": "number",
                "description": "The percentage of activities that started/finished on time"
              },
              "startedOnTimeHitRate": {
                "type": "number",
                "description": "The percentage of activities that started on time"
              },
              "finishedOnTimeHitRate": {
                "type": "number",
                "description": "The percentage of activities that finished on time"
              },
              "activities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The SmartPM id for the activity"
                    },
                    "customId": {
                      "type": "string",
                      "description": "The user friendly ID for the activity"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the activity"
                    },
                    "startingStartDate": {
                      "type": "string",
                      "description": "The start date of the activity at the start of the window"
                    },
                    "startingFinishDate": {
                      "type": "string",
                      "description": "The finish date of the activity at the start of the window"
                    },
                    "startingPercentComplete": {
                      "type": "number",
                      "description": "The percent complete of the activity at the start of the window"
                    },
                    "startingTotalFloat": {
                      "type": "integer",
                      "description": "The total float of the activity at the start of the window"
                    },
                    "startingActuallyStarted": {
                      "type": "boolean",
                      "description": "Was the activity actually started at the start of the window"
                    },
                    "startingActuallyFinished": {
                      "type": "boolean",
                      "description": "Was the activity actually finished at the start of the window"
                    },
                    "endingStartDate": {
                      "type": "string",
                      "description": "The start date of the activity at the end of the window"
                    },
                    "didNotStart": {
                      "type": "boolean",
                      "description": "Did the activity not start?"
                    },
                    "lateStart": {
                      "type": "boolean",
                      "description": "Did the activity start late?"
                    },
                    "endingFinishDate": {
                      "type": "string",
                      "description": "The finish date of the activity at the end of the window"
                    },
                    "didNotFinish": {
                      "type": "boolean",
                      "description": "Did the activity not finish?"
                    },
                    "lateFinish": {
                      "type": "boolean",
                      "description": "Did the activity finish late?"
                    },
                    "endingPercentComplete": {
                      "type": "number",
                      "description": "The percent complete of the activity at the end of the window"
                    },
                    "endingTotalFloat": {
                      "type": "integer",
                      "description": "The total float of the activity at the end of the window"
                    },
                    "varianceStartDate": {
                      "type": "integer",
                      "description": "What was the variance in start date between the start of the window and the end of the window"
                    },
                    "varianceFinishDate": {
                      "type": "integer",
                      "description": "What was the variance in finish date between the start of the window and the end of the window"
                    },
                    "variancePercentComplete": {
                      "type": "number",
                      "description": "What was the variance in percent complete between the start of the window and the end of the window"
                    },
                    "varianceTotalFloat": {
                      "type": "integer",
                      "description": "What was the variance in total float between the start of the window and the end of the window"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "Was this activity deleted during this time period?"
                    },
                    "endingActuallyStarted": {
                      "type": "boolean",
                      "description": "Was the activity actually started at the end of the window"
                    },
                    "endingActuallyFinished": {
                      "type": "boolean",
                      "description": "Was the activity actually finished at the end of the window"
                    }
                  },
                  "required": [
                    "id",
                    "customId",
                    "name",
                    "startingStartDate",
                    "startingFinishDate",
                    "startingPercentComplete",
                    "startingTotalFloat",
                    "startingActuallyStarted",
                    "startingActuallyFinished",
                    "endingStartDate",
                    "didNotStart",
                    "lateStart",
                    "endingFinishDate",
                    "didNotFinish",
                    "lateFinish",
                    "endingPercentComplete",
                    "varianceStartDate",
                    "varianceFinishDate",
                    "variancePercentComplete",
                    "deleted",
                    "endingActuallyStarted",
                    "endingActuallyFinished"
                  ],
                  "description": "The activity details"
                },
                "description": "The activity details"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "startDate",
              "finishDate",
              "total",
              "startedLate",
              "finishedLate",
              "didNotStart",
              "didNotFinish",
              "totalOnTimeHitRate",
              "startedOnTimeHitRate",
              "finishedOnTimeHitRate",
              "activities"
            ],
            "description": "SmartPM Should Start/Finish Report data object representing activity progress between specified dates."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId,startDate,finishDate",
              "propertyNames": [
                "projectId",
                "scenarioId",
                "startDate",
                "finishDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Should Start Finish Trend",
          "urlPart": "should-start-finish-trend",
          "key": "should-start-finish-trend",
          "description": "SmartPM Should Start/Finish Trend data object representing trend data for all schedules.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID containing the scenario"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID for the trend data"
              },
              "dataDate": {
                "type": "string",
                "description": "The data date in YYYY-MM-DDTHH:MM:SSZ format"
              },
              "total": {
                "type": "integer",
                "description": "The total number of activities"
              },
              "startedLate": {
                "type": "integer",
                "description": "The number of activities that started late"
              },
              "finishedLate": {
                "type": "integer",
                "description": "The number of activities that finished late"
              },
              "didNotStart": {
                "type": "integer",
                "description": "The number of activities that did not start"
              },
              "didNotFinish": {
                "type": "integer",
                "description": "The number of activities that did not finish"
              },
              "startedOnTime": {
                "type": "integer",
                "description": "The number of activities that started on time"
              },
              "finishedOnTime": {
                "type": "integer",
                "description": "The number of activities that finished on time"
              },
              "startedOnTimeHitRate": {
                "type": "number",
                "description": "The percentage of activities that started on time"
              },
              "finishedOnTimeHitRate": {
                "type": "number",
                "description": "The percentage of activities that finished on time"
              },
              "totalOnTimeHitRate": {
                "type": "number",
                "description": "The percentage of activities that started/finished on time"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "dataDate",
              "total",
              "startedLate",
              "finishedLate",
              "didNotStart",
              "didNotFinish",
              "startedOnTime",
              "finishedOnTime",
              "startedOnTimeHitRate",
              "finishedOnTimeHitRate",
              "totalOnTimeHitRate"
            ],
            "description": "SmartPM Should Start/Finish Trend data object representing trend data for all schedules."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId,dataDate",
              "propertyNames": [
                "projectId",
                "scenarioId",
                "dataDate"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Monthly Distribution",
          "urlPart": "monthly-distribution",
          "key": "monthly-distribution",
          "description": "SmartPM Monthly Distribution data object representing activity distribution data.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "The Project ID containing the scenario"
              },
              "scenarioId": {
                "type": "string",
                "description": "The Scenario ID for the distribution data"
              },
              "date": {
                "type": "string",
                "description": "The date for the distribution data"
              },
              "baselineStarts": {
                "type": "integer",
                "description": "Number of activities that should start according to baseline"
              },
              "baselineFinishes": {
                "type": "integer",
                "description": "Number of activities that should finish according to baseline"
              },
              "currentStarts": {
                "type": "integer",
                "description": "Number of activities that currently start"
              },
              "currentFinishes": {
                "type": "integer",
                "description": "Number of activities that currently finish"
              }
            },
            "required": [
              "projectId",
              "scenarioId",
              "date",
              "baselineStarts",
              "baselineFinishes",
              "currentStarts",
              "currentFinishes"
            ],
            "description": "SmartPM Monthly Distribution data object representing activity distribution data."
          },
          "keys": [
            {
              "urlPart": "projectId,scenarioId,date",
              "propertyNames": [
                "projectId",
                "scenarioId",
                "date"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Company Metrics",
      "urlPart": "companymetrics",
      "key": "companymetrics",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/companymetrics/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "CompanyMetrics V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/companymetrics/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "CompanyHealthTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "CompanyQualityTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "CompanyCompressionTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              },
              "CompanyMetricTrendConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "CompanyMetrics V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Company Health Trend",
          "urlPart": "company-health-trend",
          "key": "company-health-trend",
          "description": "SmartPM Company Health Trend data object representing health and risk metrics over time.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "companyId": {
                "type": "string",
                "description": "The Company ID for the health trend data"
              },
              "periodType": {
                "type": "string",
                "description": "The type of period for the trend data (BY_MONTH or BY_PERIOD)"
              },
              "periodLabel": {
                "type": "string",
                "description": "Label for the period (e.g., \u002711/2022\u0027)"
              },
              "health": {
                "type": "integer",
                "description": "Health score for the period (0-100)",
                "minimum": 0,
                "maximum": 100
              },
              "risk": {
                "type": "string",
                "description": "Risk assessment for the period (e.g., \u0027GOOD\u0027, \u0027FINE\u0027)"
              }
            },
            "required": [
              "companyId",
              "periodType",
              "periodLabel",
              "health",
              "risk"
            ],
            "description": "SmartPM Company Health Trend data object representing health and risk metrics over time."
          },
          "keys": [
            {
              "urlPart": "companyId,periodType,periodLabel",
              "propertyNames": [
                "companyId",
                "periodType",
                "periodLabel"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Company Quality Trend",
          "urlPart": "company-quality-trend",
          "key": "company-quality-trend",
          "description": "SmartPM Company Quality Trend data object representing quality metrics over time.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "companyId": {
                "type": "string",
                "description": "The Company ID for the quality trend data"
              },
              "periodType": {
                "type": "string",
                "description": "The type of period for the trend data (BY_MONTH or BY_PERIOD)"
              },
              "periodLabel": {
                "type": "string",
                "description": "Label for the period (e.g., \u002711/2022\u0027)"
              },
              "score": {
                "type": "integer",
                "description": "Quality score for the period (0-100)",
                "minimum": 0,
                "maximum": 100
              },
              "grade": {
                "type": "object",
                "properties": {
                  "mark": {
                    "type": "string",
                    "description": "Letter grade mark (e.g., \u0027B\u002B\u0027, \u0027A-\u0027)"
                  },
                  "indicator": {
                    "type": "string",
                    "description": "Performance indicator (e.g., \u0027GOOD\u0027, \u0027FINE\u0027)"
                  }
                },
                "required": [
                  "mark",
                  "indicator"
                ],
                "description": "Grade information for the period"
              }
            },
            "required": [
              "companyId",
              "periodType",
              "periodLabel",
              "score",
              "grade"
            ],
            "description": "SmartPM Company Quality Trend data object representing quality metrics over time."
          },
          "keys": [
            {
              "urlPart": "companyId,periodType,periodLabel",
              "propertyNames": [
                "companyId",
                "periodType",
                "periodLabel"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Company Compression Trend",
          "urlPart": "company-compression-trend",
          "key": "company-compression-trend",
          "description": "SmartPM Company Compression Trend data object representing compression metrics over time.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "companyId": {
                "type": "string",
                "description": "The Company ID for the compression trend data"
              },
              "periodType": {
                "type": "string",
                "description": "The type of period for the trend data (BY_MONTH or BY_PERIOD)"
              },
              "periodLabel": {
                "type": "string",
                "description": "Label for the period (e.g., \u002711/2022\u0027)"
              },
              "scheduleCompression": {
                "type": "number",
                "description": "Schedule compression value for the period"
              },
              "indicator": {
                "type": "string",
                "description": "Performance indicator (e.g., \u0027GOOD\u0027, \u0027BAD\u0027)"
              }
            },
            "required": [
              "companyId",
              "periodType",
              "periodLabel",
              "scheduleCompression",
              "indicator"
            ],
            "description": "SmartPM Company Compression Trend data object representing compression metrics over time."
          },
          "keys": [
            {
              "urlPart": "companyId,periodType,periodLabel",
              "propertyNames": [
                "companyId",
                "periodType",
                "periodLabel"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        },
        {
          "name": "Company Metric Trend",
          "urlPart": "company-metric-trend",
          "key": "company-metric-trend",
          "description": "SmartPM Company Metric Trend data object representing various metric values over time.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "companyId": {
                "type": "string",
                "description": "The Company ID for the metric trend data"
              },
              "periodType": {
                "type": "string",
                "description": "The type of period for the trend data (BY_MONTH or BY_PERIOD)"
              },
              "periodLabel": {
                "type": "string",
                "description": "Label for the period (e.g., \u002711/2022\u0027)"
              },
              "metricValue": {
                "type": "number",
                "description": "The value of the metric for the period"
              }
            },
            "required": [
              "companyId",
              "periodType",
              "periodLabel",
              "metricValue"
            ],
            "description": "SmartPM Company Metric Trend data object representing various metric values over time."
          },
          "keys": [
            {
              "urlPart": "companyId,periodType,periodLabel",
              "propertyNames": [
                "companyId",
                "periodType",
                "periodLabel"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    },
    {
      "name": "Model",
      "urlPart": "model",
      "key": "model",
      "description": "",
      "version": 1,
      "services": [
        {
          "name": "smart-pm/model/1 Action Processor",
          "type": "ActionProcessor",
          "configSchema": {
            "type": "object",
            "title": "Model V1 Action Processor Configuration",
            "description": "Configuration of the data object actions for the module."
          }
        },
        {
          "name": "smart-pm/model/1 Cache Writer",
          "type": "CacheWriter",
          "configSchema": {
            "type": "object",
            "properties": {
              "ModelsConfig": {
                "type": "object",
                "properties": {
                  "UploadObject": {
                    "type": "boolean"
                  }
                }
              }
            },
            "title": "Model V1 Cache Writer Configuration",
            "description": "Configuration of the data object caches for the module."
          }
        }
      ],
      "dataObjects": [
        {
          "name": "Models",
          "urlPart": "models",
          "key": "models",
          "description": "SmartPM Model data object representing project model information.",
          "createEndpoint": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique identifier for the model"
              },
              "name": {
                "type": "string",
                "description": "The name of the model"
              },
              "description": {
                "type": "string",
                "description": "Optional description of the model"
              },
              "isAutoUpdate": {
                "type": "boolean",
                "description": "Whether the model auto-updates"
              },
              "isOriginalModel": {
                "type": "boolean",
                "description": "Whether this is the original model"
              },
              "isArchived": {
                "type": "boolean",
                "description": "Whether the model is archived"
              },
              "modelType": {
                "type": "string",
                "description": "The type of model (BASELINE, ADVANCED_MODEL, TEST_WORKWEEK, REMOVE_RESOURCES, EXCLUDE_PROGRESS)"
              },
              "initialDataDate": {
                "type": "string",
                "format": "date-time",
                "description": "The initial data date of the model"
              }
            },
            "required": [
              "id",
              "name",
              "isAutoUpdate",
              "isOriginalModel",
              "isArchived",
              "modelType",
              "initialDataDate"
            ],
            "description": "SmartPM Model data object representing project model information."
          },
          "keys": [
            {
              "urlPart": "id",
              "propertyNames": [
                "id"
              ],
              "isPrimary": true
            }
          ],
          "actions": []
        }
      ]
    }
  ]
}